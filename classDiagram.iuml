@startuml
Event --o Ticket : > has
Event -- LineUp : > has
Ticket o-- Client : < has
CampingTicket --|> Ticket
VIPTicket --|> Ticket
DayTicket -left-|> Ticket
Stage --o Address : > has
Client --o Address : > has
TimeSlot -- Stage : > has
LineUp --o TimeSlot : > has
LineUp --o Band : > has

class Client{
-int id
-String name
-Address address
-String phoneNumber
-LinkedList<Ticket> tickets
+Client(String name, String phoneNumber, int id, Address address)
+Ticket byTicket(TicketType type)
+boolean cancelTicket(Ticket ticket)
+Address getAddress()
}

abstract class Ticket{
enum TicketType{DAY, CAMPING, VIP}
#int ID
#String description
#boolean available
#Event event
#double stdPrice
+Ticket(TicketType ticketType, int id, String description, boolean available, double standardPrice, Event event)
+changePrice(Money money)
+Money getPrice()
+getDescription()
}

class Event{
-int id
-String date
-String name
-double budget
-LineUp lineup
-LinkedList<Ticket> tickets
-int maxCapacity
+Event(int id, String date, String name, double budget, int maxCapacity)
+LineUp getLineUp()
+void changeBudget(Money money)
+double getBudget()
}

class Band{
-int id
-String name
-String phoneNumber
-double priceProEvent;
+Band(int id,String name, String phoneNumber, double priceProEvent)
+String getPhoneNumber()
+String getName()
}

class Stage{
-int id
-String name
-Address address
-int capacity
+stage(int id, String name, int capacity, Address address)
}

class Address{
-String country
-String city
-String street
-String zip
+Address(String country, String city, String street,String zip);
}

class DayTicket{
-String date
+DayTicket(TicketType ticketType, int id, String description, boolean available, double standardPrice, Event event, String date)
+getDate()
}

class CampingTicket{
+String campingPlaceName
+CampingTicket(TicketType ticketType, int id, String description, boolean available, double standardPrice, String campingPlaceName, Event event)
}

class VIPTicket{
+VIPTicket(TicketType ticketType, int id, String description, boolean available, double standardPrice, Event event)
}

class LineUp{
-Map<TimeSlot, Band> lineUp
+boolean addBand(Bang band, TimeSlot timeslot)
+boolean removeBand(Band band)
+LineUp getLineUp()
}

class TimeSlot{
Date date
Stage stage
boolean free
+TimeSlot(Date date, Stage stage, boolean free)
}

@enduml